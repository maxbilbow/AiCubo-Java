package com.maxbilbow.aicubo.ai;

import java.util.HashMap;
import java.util.LinkedList;

import com.maxbilbow.aicubo.ai.Strategy.AiMethod;
import com.maxbilbow.aicubo.ai.Strategy.State;
import com.maxbilbow.aicubo.ants.AntBehaviour.Crowd;



public class StrategyEngine extends HashMap<String, Strategy> {
	/**
	 * 
	 */
	private static final long serialVersionUID = -6116209501748928257L;

	public interface IMethods {

		public String[] Strings();
		public String toString();
		public int length();
	}
	
	int maxTurns;
	public StrategyEngine(IMethods ids, int maxTurns) {
		super(ids.length());
		this.maxTurns = maxTurns;
		String[] strings = ids.Strings();
		
		for (int i=0; i< strings.length; ++i) {
			this.put(strings[i], new Strategy(i, strings[i]));
		}
		this.history.addFirst(strings[0]);
	}


	public void addMethod(IMethods key, AiMethod method) {
		this.addMethod(key, this.maxTurns, method);
	}
	
	public void addMethod(IMethods key, int maxTurns, AiMethod method) {
		this.get(key.toString()).setMethod(method);
		this.get(key.toString()).maxTurns = maxTurns;
	}
	
//	Strategy current;
	LinkedList<String> history = new LinkedList<>();
	public Strategy invokeCurrent(Object... args) {
		Strategy ai = this.get(history.getFirst());
		
		State state = ai.invoke(args);
		
//		return ? ai 
		
	}
	
	public Strategy getPrevious() {
		if (history.isEmpty())
			return null;
		return this.get(history.get(1));//.getLast());
	}

	public void next() {
		
	}
}
