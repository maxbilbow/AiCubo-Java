package click.rmx.engine.physics;

import click.rmx.engine.Transform;
import click.rmx.engine.math.Vector3;

public class CollisonBounds {

	protected final Transform transform;

	public CollisonBounds() {
		super();
	}

	/**
	 * Checks if this AABB intersects another AABB.
	 *
	 * @param other The other AABB
	 * @return true if a collision was detected.
	 */
	public boolean intersects(BoundingBox other) {
	    	Vector3 a = this.transform.position();
	    	Vector3 b = other.transform.position();
	    	
	    	if (this.xMin() + a.x > other.xMax() + b.x)
	    		return false;
	    	if (this.yMin() + a.y > other.yMax() + b.y)
	    		return false;
	    	if (this.zMin() + a.z > other.zMax() + b.z)
	    		return false;
	    	if (this.xMax() + a.x < other.xMin() + b.x)
	    		return false;
	    	if (this.yMax() + a.y < other.xMin() + b.y)
	    		return false;
	    	if (this.zMax() + a.z < other.xMin() + b.z)
	    		return false;
	//    	for (int i=0; i<faces.length;) {
	//    		if (this.didIntersect(thisPos, otherPos, this.faces[i][MAX], other.faces[i][MIN]))
	//    				return false;
	//    		if (this.didIntersect(otherPos, thisPos, other.faces[i][MAX], this.faces[i][MIN]))
	//    				return false;
	//    	}
	
	        // All tests failed, we have a intersection
	        return true;
	    }

}