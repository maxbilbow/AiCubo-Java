package rmx.engine;

import rmx.RMXObject;
import rmx.engine.math.Matrix4;
import rmx.engine.math.Vector3;

public class PhysicsWorld extends RMXObject {
	private Vector3 gravity = new Vector3(0f,-9.8f,0f);

	public Vector3 getGravity() {
		return gravity;
	}

	public void setGravity(Vector3 gravity) {
		this.gravity.set(gravity);
	}
	
	public void setGravity(float x, float y, float z) {
		this.gravity.x = x;
		this.gravity.y = y;
		this.gravity.z = z;
	}
	
	public void updatePhysics(Node rootNode) {
		for (Node node : rootNode.getChildren()) {
			if (node.physicsBody() != null) {
				applyGravityTo(node, node.physicsBody());
			}
		}
	}

	private void applyGravityTo(Node node, PhysicsBody body) {
		Matrix4 m = node.transform.localMatrix();
		float g = 0;
		float framerate = 1/7;
		m.m30 += this.gravity.x * framerate * body.getMass();
		m.m31 += = this.gravity.y * framerate * body.getMass();;
		m.m32 += = this.gravity.x * framerate * body.getMass();;
		
//		m.translate(x, y, z);
		if (m.m31 < g)
			m.m31 = g;
	}
	
}
