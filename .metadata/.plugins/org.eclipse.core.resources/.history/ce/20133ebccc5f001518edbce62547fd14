package click.rmx.engine;

import java.util.Collection;
import java.util.List;
import java.util.Set;

import click.rmx.IRMXObject;
import click.rmx.engine.behaviours.IBehaviour;
import click.rmx.engine.geometry.Shape;
import click.rmx.engine.math.Matrix4;
import click.rmx.engine.physics.CollisionBody;
import click.rmx.engine.physics.PhysicsBody;

public interface Node extends IRMXObject {

	void setComponent(Class<?> type, ANodeComponent component);

	void addBehaviour(IBehaviour behaviour);

	NodeComponent getComponent(Class<?> type);

	List<Node> getChildren();

	void addChild(Node child);

	boolean removeChildNode(Node node);

	Node getChildWithName(String name);

	Camera camera();

	void setCamera(Camera camera);

	Geometry geometry();

	void setGeometry(Shape shape);

	PhysicsBody physicsBody();

	void setPhysicsBody(PhysicsBody body);

	CollisionBody collisionBody();

	void updateLogic(long time);

	void updateAfterPhysics(long time);

	void draw(Matrix4 modelMatrix);

	Node getParent();

	void setParent(Node parent);

	/**
	 * Sends a message to all behaviours and all children of this node.
	 */
	@Override
	void broadcastMessage(String message);

	/**
	 * Sends a message to all behaviours and all children of this node.
	 */
	@Override
	void broadcastMessage(String message, Object args);

	boolean sendMessageToBehaviour(Class<?> theBehaviour, String message);

	boolean sendMessageToBehaviour(Class<?> theBehaviour, String message, Object args);

	void addToCurrentScene();

	Transform transform();

	default void addGeometryToList(Set<Geometry> geometries) {
		if (this.geometry() != null && this.geometry().isVisible())
			geometries.add(this.geometry());
		this.getChildren().stream().forEach(child -> child.addGeometryToList(geometries));
	}
}